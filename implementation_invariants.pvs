implementation_invariants: THEORY
BEGIN


IMPORTING implementation_rewrites_1

q: VAR state_I





Reachable?_mem_rt(q: state_I): bool = syn1_mem_need_rt(q) AND  NOT syn1_dep_wb_dst(q)(rt(q`mem_s`instr))  IMPLIES select_r(q`a_s`rf, rt(q`mem_s`instr)) = q`mem_s`rt

Reachable?_ex_rs(q: state_I): bool = syn1_ex_need_rs(q) AND  NOT syn1_dep_mem_dst(q)(rs(q`ex_s`instr))  AND NOT syn1_dep_wb_dst(q)(rs(q`ex_s`instr)) IMPLIES select_r(q`a_s`rf, rs(q`ex_s`instr)) = q`ex_s`rs

Reachable?_ex_rt(q: state_I): bool = syn1_ex_need_rt(q) AND  NOT syn1_dep_mem_dst(q)(rt(q`ex_s`instr))  AND NOT syn1_dep_wb_dst(q)(rt(q`ex_s`instr)) IMPLIES select_r(q`a_s`rf, rt(q`ex_s`instr)) = q`ex_s`rt


Reachable?_id_ex_rs(q: state_I): bool = syn1_id_need_rs(q) AND  NOT syn1_stall_issue(q) IMPLIES  NOT syn1_dep_ex_dst(q)(rs(q`id_s`instr))

Reachable?_id_ex_rt(q: state_I): bool = syn1_id_need_rt(q) AND  NOT syn1_stall_issue(q) IMPLIES  NOT syn1_dep_ex_dst(q)(rt(q`id_s`instr))

Reachable?_id_mem_rs(q: state_I): bool = syn1_id_need_rs(q) AND  NOT syn1_stall_issue(q) IMPLIES  NOT syn1_dep_mem_dst(q)(rs(q`id_s`instr)) OR syn1_current_mem_has_wb_val(q)

Reachable?_id_mem_rt(q: state_I): bool = syn1_id_need_rt(q) AND  NOT syn1_stall_issue(q) IMPLIES  NOT syn1_dep_mem_dst(q)(rt(q`id_s`instr)) OR syn1_current_mem_has_wb_val(q)

Reachable?(q) : bool = Reachable?_mem_rt(q) AND Reachable?_ex_rs(q) AND Reachable?_ex_rt(q) AND Reachable?_id_ex_rs(q) AND Reachable?_id_ex_rt(q) AND Reachable?_id_mem_rs(q) AND Reachable?_id_mem_rt(q)


Inv_Init: THEOREM Init?(q) IMPLIES Reachable?(q)
%|- Inv_Init : PROOF
%|- (then (skosimp) (impl-invs)
%|- 
%|- (assert) (apply (then (split 1)  (assert) (flatten) (assert))))
%|- QED

Inv_mem_rt: THEOREM  Reachable?_mem_rt(I_step(q))

Inv_id_ex_rs: THEOREM Reachable?_id_ex_rs(I_step(q))
Inv_id_ex_rt: THEOREM Reachable?_id_ex_rt(I_step(q))
Inv_id_mem_rs: THEOREM Reachable?_id_mem_rs(I_step(q))
Inv_id_mem_rt: THEOREM Reachable?_id_mem_rt(I_step(q))

%|- Inv_id_* : PROOF
%|- (then (skosimp) (expand Reachable?_id_$1) (flatten)
%|-  (assert) 
%|-  (auto-rewrite-theory implementation_state_1_sync :always? T)
%|-  (assert))
%|- QED


Inv_ex_rs: THEOREM Reachable?_ex_rs(I_step(q))



END implementation_invariants
